<UserControl x:Class="NabbR.Views.Chat.ChatRoomView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:vm="clr-namespace:NabbR.ViewModels.Chat;assembly=NabbR.Client"
             xmlns:chat="clr-namespace:NabbR.Views.Chat"
             xmlns:tmpl="clr-namespace:NabbR.Views.Chat.Templates"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:controls="clr-namespace:NabbR.Controls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d">

    <UserControl.Resources>
        <chat:MessageContentTemplateSelector x:Key="messageContentTemplateSelector" />
        <chat:MessageTemplateSelector x:Key="messageTemplateSelector">
            <chat:MessageTemplateSelector.NotificationTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=Content}" />
                </DataTemplate>
            </chat:MessageTemplateSelector.NotificationTemplate>
            <chat:MessageTemplateSelector.DirectMessageTemplate>
                <DataTemplate>
                    <Grid>
                    </Grid>
                </DataTemplate>
            </chat:MessageTemplateSelector.DirectMessageTemplate>
            <chat:MessageTemplateSelector.ChatRoomMessageTemplate>
                <DataTemplate>
                    <tmpl:ChatMessageTemplate />
                </DataTemplate>
            </chat:MessageTemplateSelector.ChatRoomMessageTemplate>
        </chat:MessageTemplateSelector>
    </UserControl.Resources>
    <Grid d:DataContext="{d:DesignInstance Type=vm:ChatRoomViewModel, IsDesignTimeCreatable=True}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LoadStates">
                <VisualState x:Name="ChatLoaded" />
                <VisualState x:Name="ChatLoading">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="ProgressIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="ChatRoomElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ChatLoadFailed">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="ProgressIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="ProgressBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="ChatRoomElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid x:Name="ChatRoomElement">
            <Grid.Resources>
                <CollectionViewSource x:Key="UsersCollectionViewSource"
                                  IsLiveSortingRequested="True"
                                  IsLiveFilteringRequested="True"
                                  Source="{Binding Path=Room.Users}"
                                  Filter="UserFilter">
                    <CollectionViewSource.LiveFilteringProperties>
                        <sys:String>Status</sys:String>
                    </CollectionViewSource.LiveFilteringProperties>
                    <CollectionViewSource.SortDescriptions>
                        <scm:SortDescription PropertyName="Status" />
                        <scm:SortDescription PropertyName="Name" />
                    </CollectionViewSource.SortDescriptions>
                </CollectionViewSource>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <TextBlock Style="{StaticResource Heading2}" Text="{Binding Path=Room.Topic}" />
            </Grid>
            <Border Grid.Row="1" BorderThickness="1" BorderBrush="{StaticResource InputBorder}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <controls:ChatMessagesControl ItemsSource="{Binding Path=Room.Messages, IsAsync=True}">
                                <controls:ChatMessagesControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border Margin="5,0,5,2">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="100" />
                                                </Grid.ColumnDefinitions>
                                                <ContentControl Grid.Column="0"
                                                Content="{Binding}"
                                                HorizontalAlignment="Stretch"
                                                HorizontalContentAlignment="Stretch"
                                                ContentTemplateSelector="{StaticResource messageTemplateSelector}" />
                                                <TextBlock Grid.Column="1" HorizontalAlignment="Right" Text="{Binding Path=MessageDateTime, StringFormat=\{0:h:mm:ss tt\}}" />
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </controls:ChatMessagesControl.ItemTemplate>
                            </controls:ChatMessagesControl>
                        </Grid>

                        <Grid Grid.Row="1">
                            <Grid Margin="0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="ComposeMessageElement" Margin="5,0" Text="{Binding Path=ComposedMessage, UpdateSourceTrigger=PropertyChanged}" KeyUp="ComposeMessageElement_KeyUp" />
                                <Button Grid.Column="1" Content="Send" Command="{Binding Path=SendMessageCommand}" />
                            </Grid>
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="1">
                        <ScrollViewer>
                            <ItemsControl ItemsSource="{Binding Source={StaticResource UsersCollectionViewSource}}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="5,0,5,2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="29" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="0" Orientation="Horizontal" Height="24" VerticalAlignment="Top" ToolTip="{Binding Path=Note}">
                                                <Border Width="5" Background="{Binding Path=Status, Converter={StaticResource userStatusToBrushConverter}}" />
                                                <Image Width="24">
                                                    <Image.Style>
                                                        <Style TargetType="{x:Type Image}">
                                                            <Setter Property="Source" Value="{Binding Path=Hash, Converter={StaticResource hashToGravatarImageConverter}, ConverterParameter=24, IsAsync=True}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.IsTyping}" Value="True">
                                                                    <Setter Property="Source" Value="/NabbR;component/Resources/typing-icon-light.png" />
                                                                    <Setter Property="Margin" Value="1,0,0,0" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </StackPanel>
                                            <TextBlock Grid.Column="1" Text="{Binding Path=Name}" Margin="10,2" />
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
        <!--Progress indicator-->
        <Grid x:Name="ProgressIndicator" Grid.Row="1" Visibility="Collapsed">
            <ProgressBar x:Name="ProgressBar" IsIndeterminate="True" />
        </Grid>
    </Grid>
</UserControl>
